pragma solidity 0.8.17;
// pragma solidity ^0.8.0;

import "forge-std/console2.sol";
import "forge-std/test.sol";
import "@dex/DexRouter.sol";

interface IProxyAdmin {
    function upgrade(address proxy, address newImplementation) external;
}

contract DualCommissionTest is Test {
    address dexRouter = 0xA748D6573acA135aF68F2635BE60CB80278bd855;
    address user = 0x438bea3bD1291aF372a3f474A4a976861AcaCA86;
    address USDT = 0xc2132D05D31c914a87C6611C10748AEb04B58e8F;
    address TT = 0x51C065005b11e4BB1D9EA7831d45f65E0FBb7351;
    address proxyAdmin = 0x6CEa74418A513C95D0efa4D75349Cb1f6ee7A335;
    address owner = 0xE1C7Db7575BABF0d3369835678ec9b7F15c0886B;
    address referer1 = 0xEA522Fe3A65874bA3CEC38e912220282b7C71E97;
    address referer2 = 0x399EfA78cAcD7784751CD9FBf2523eDf9EFDf6Ad;
    //address WMATIC = 0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270;
    //address tokenApprove = 0x3B86917369B83a6892f553609F3c2F439C184e31;

    function setUp() public {
        vm.createSelectFork(vm.envString("POLYGON_RPC_URL"), 66400728);
        address dualCommissionImpl = address(new DexRouter());
        vm.prank(owner);
        IProxyAdmin(proxyAdmin).upgrade(dexRouter, dualCommissionImpl);
    }

    function test_DualFromCommission() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer1 USDT balance before",IERC20(USDT).balanceOf(address(referer1)));
        console2.log("Referer2 USDT balance before",IERC20(USDT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb73510000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000000022220afc2aaa000000000064ea522fe3a65874ba3cec38e912220282b7c71e97000000000000000000000000c2132D05D31c914a87C6611C10748AEb04B58e8F22220afc2aaa0000000000c8399efa78cacd7784751cd9fbf2523edf9efdf6ad";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer1 USDT balance after",IERC20(USDT).balanceOf(address(referer1)));
        console2.log("Referer2 USDT balance after",IERC20(USDT).balanceOf(address(referer2)));
        vm.stopPrank();
    }

    function test_SingleFromCommission() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer USDT balance before",IERC20(USDT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000000027100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c2132D05D31c914a87C6611C10748AEb04B58e8F3ca20afc2aaa0000000000c8399efa78cacd7784751cd9fbf2523edf9efdf6ad";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer USDT balance after",IERC20(USDT).balanceOf(address(referer2)));
        vm.stopPrank();
    }

    function test_SingleNoneFromCommission() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer USDT balance before",IERC20(USDT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000000027100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c2132D05D31c914a87C6611C10748AEb04B58e8F3ca20afc2aaa000000000000399efa78cacd7784751cd9fbf2523edf9efdf6ad";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer USDT balance after",IERC20(USDT).balanceOf(address(referer2)));
        vm.stopPrank();
    }

    function _test_SingleFromCommissionOverLimit() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer USDT balance before",IERC20(USDT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000000027100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c2132D05D31c914a87C6611C10748AEb04B58e8F3ca20afc2aaa0000000001c8399efa78cacd7784751cd9fbf2523edf9efdf6ad";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer USDT balance after",IERC20(USDT).balanceOf(address(referer2)));
        vm.stopPrank();
    }

    function _test_DualFromCommissionOverLimit() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer1 USDT balance before",IERC20(USDT).balanceOf(address(referer1)));
        console2.log("Referer2 USDT balance before",IERC20(USDT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb73510000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000000022220afc2aaa000000000064ea522fe3a65874ba3cec38e912220282b7c71e97000000000000000000000000c2132D05D31c914a87C6611C10748AEb04B58e8F22220afc2aaa0000000001c8399efa78cacd7784751cd9fbf2523edf9efdf6ad";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer1 USDT balance after",IERC20(USDT).balanceOf(address(referer1)));
        console2.log("Referer2 USDT balance after",IERC20(USDT).balanceOf(address(referer2)));
        vm.stopPrank();
    }

    function test_swapNoCommission() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer1 USDT balance before",IERC20(USDT).balanceOf(address(referer1)));
        console2.log("Referer2 USDT balance before",IERC20(USDT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000000027100000000000000000000000000000000000000000000000000000000000000000";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer1 USDT balance after",IERC20(USDT).balanceOf(address(referer1)));
        console2.log("Referer2 USDT balance after",IERC20(USDT).balanceOf(address(referer2)));
        vm.stopPrank();
    }

    function test_SingleToCommission() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer TT balance before",IERC20(TT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb73510000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000051C065005b11e4BB1D9EA7831d45f65E0FBb73513ca20afc2bbb0000000000c8399efa78cacd7784751cd9fbf2523edf9efdf6ad";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer TT balance after",IERC20(TT).balanceOf(address(referer2)));
        vm.stopPrank();
    }

    function test_SingleNoneToCommission() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer TT balance before",IERC20(TT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb73510000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000051C065005b11e4BB1D9EA7831d45f65E0FBb73513ca20afc2bbb000000000000399efa78cacd7784751cd9fbf2523edf9efdf6ad";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer TT balance after",IERC20(TT).balanceOf(address(referer2)));
        vm.stopPrank();
    }

    function test_DualToCommission() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer1 TT balance before",IERC20(TT).balanceOf(address(referer1)));
        console2.log("Referer2 TT balance before",IERC20(TT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb73510000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000000022220afc2bbb000000000064ea522fe3a65874ba3cec38e912220282b7c71e9700000000000000000000000051C065005b11e4BB1D9EA7831d45f65E0FBb735122220afc2bbb0000000000c8399efa78cacd7784751cd9fbf2523edf9efdf6ad";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer1 TT balance after",IERC20(TT).balanceOf(address(referer1)));
        console2.log("Referer2 TT balance after",IERC20(TT).balanceOf(address(referer2)));
        vm.stopPrank();
    }

    function _test_SingleToCommissionOverLimit() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer TT balance before",IERC20(TT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb73510000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000000000000000000000000000000051C065005b11e4BB1D9EA7831d45f65E0FBb73513ca20afc2bbb0000000001c8399efa78cacd7784751cd9fbf2523edf9efdf6ad";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer TT balance after",IERC20(TT).balanceOf(address(referer2)));
        vm.stopPrank();
    }

    function _test_DualToCommissionOverLimit() public {
        vm.startPrank(user);
        console2.log("user TT balance before",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance before",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer1 TT balance before",IERC20(TT).balanceOf(address(referer1)));
        console2.log("Referer2 TT balance before",IERC20(TT).balanceOf(address(referer2)));
        bytes memory data = hex"b80c2f0900000000000000000000000000000000000000000000000000339241989b9380000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb735100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000001978c87e2a600000000000000000000000000000000000000000000000000000000677cdea0000000000000000000000000000000000000000000000000000000000000012000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000010f6275000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000160000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000010000000000000000000000007a8f557916d99945eaf2f8763935a70bdc81f65000000000000000000000000000000000000000000000000000000000000000018000000000000000000027109b56e96c9cd9e9224d21ff675a30bfab6450f2f00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000060000000000000000000000000c2132d05d31c914a87c6611c10748aeb04b58e8f00000000000000000000000051c065005b11e4bb1d9ea7831d45f65e0fbb73510000000000000000000000000000000000000000000000000000000000002710000000000000000000000000000000000000000000000000000000000000000022220afc2bbb000000000164ea522fe3a65874ba3cec38e912220282b7c71e9700000000000000000000000051C065005b11e4BB1D9EA7831d45f65E0FBb735122220afc2bbb0000000001c8399efa78cacd7784751cd9fbf2523edf9efdf6ad";
        (bool s, ) = dexRouter.call{value: 0}(data);
        require(s);
        console2.log("user TT balance after",IERC20(TT).balanceOf(address(user)));
        console2.log("user USDT balance after",IERC20(USDT).balanceOf(address(user)));
        console2.log("Referer1 TT balance after",IERC20(TT).balanceOf(address(referer1)));
        console2.log("Referer2 TT balance after",IERC20(TT).balanceOf(address(referer2)));
        vm.stopPrank();
    }
}